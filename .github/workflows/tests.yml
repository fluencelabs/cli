name: Run tests with workflow_call

on:
  workflow_call:
    inputs:
      ref:
        description: "Git ref to checkout to"
        type: string
        default: "main"
      fluence-env:
        description: "Fluence environment to run tests against"
        type: string
        default: "local"
      run-tests-in-parallel:
        description: "Whether to run tests in parallel or synchronously"
        type: string
        default: "true"
      rust-peer-image:
        description: "rust-peer image tag"
        type: string
        default: "fluencelabs/rust-peer:minimal"
      marine-version:
        description: "marine version"
        type: string
        default: "null"
      mrepl-version:
        description: "mrepl version"
        type: string
        default: "null"
      marine-rs-sdk-version:
        description: "marine-rs-sdk version"
        type: string
        default: "null"
      marine-rs-sdk-test-version:
        description: "marine-rs-sdk-test version"
        type: string
        default: "null"
      js-client-snapshots:
        description: "js-client snapshots"
        type: string
        default: "null"

env:
  CI: true
  FORCE_COLOR: true
  RUST_PEER_IMAGE: "${{ inputs.rust-peer-image }}"

jobs:
  tests:
    name: "Run tests"
    runs-on: builder
    timeout-minutes: 60

    outputs:
      version: "${{ steps.snapshot.outputs.version }}"

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout fluence-cli
        uses: actions/checkout@v3
        with:
          repository: fluencelabs/fluence-cli
          ref: ${{ inputs.ref }}

      - name: Import secrets
        uses: hashicorp/vault-action@v2.5.0
        id: secrets
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD ;
            kv/npm-registry/basicauth/ci token | NODE_AUTH_TOKEN;
            kv/cargo-registry/users/ci token | CARGO_REGISTRIES_FLUENCE_TOKEN

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.fluence.dev
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Pull rust-peer image
        run: docker pull ${{ env.RUST_PEER_IMAGE }}

      - name: Run rust-peer
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: ".github/e2e/docker-compose.yml"
          down-flags: "--volumes"

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 8

      - name: Setup node with self-hosted npm registry
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://npm.fluence.dev"
          cache: "pnpm"

      - run: pnpm i

      - name: Set js-client.api version
        if: inputs.js-client-snapshots != 'null'
        uses: fluencelabs/github-actions/npm-set-dependency@main
        with:
          package: "@fluencelabs/js-client.api"
          version: ${{ fromJson(inputs.js-client-snapshots)['js-client.api'] }}
          package-manager: pnpm

      - name: Set js-client.node version
        if: inputs.js-client-snapshots != 'null'
        uses: fluencelabs/github-actions/npm-set-dependency@main
        with:
          package: "@fluencelabs/js-client.node"
          version: ${{ fromJson(inputs.js-client-snapshots)['js-client.node'] }}
          package-manager: pnpm

      - name: Set aqua-api version
        if: inputs.aqua-version != 'null'
        uses: fluencelabs/github-actions/npm-set-dependency@main
        with:
          package: "@fluencelabs/aqua-api"
          version: ${{ inputs.aqua-version }}
          package-manager: pnpm

      - name: Update versions.json
        uses: ./.github/actions/replace-version
        with:
          versions: |
            {
              "npm": {
                "@fluencelabs/js-client.api": "${{ inputs.js-client-snapshots == 'null' && 'null' || fromJson(inputs.js-client-snapshots)['js-client.api'] }}",
                "@fluencelabs/js-client.node": "${{ inputs.js-client-snapshots == 'null' && 'null' || fromJson(inputs.js-client-snapshots)['js-client.node'] }}"
              },
              "cargo": {
                "marine": "${{ inputs.marine-version }}",
                "mrepl": "${{ inputs.mrepl-version }}",
                "marine-rs-sdk": "${{ inputs.marine-rs-sdk-version }}",
                "marine-rs-sdk-test": "${{ inputs.marine-rs-sdk-test-version }}"
              }
            }

      - name: Run tests
        env:
          FLUENCE_ENV: "${{ inputs.fluence-env }}"
          RUN_TESTS_IN_PARALLEL: "${{ inputs.run-tests-in-parallel }}"
          FLUENCE_USER_DIR: "${{ github.workspace }}/tmp/.fluence"
          CARGO_REGISTRIES_FLUENCE_INDEX: "git://crates.fluence.dev/index"
          CARGO_REGISTRIES_FLUENCE_TOKEN: "${{ steps.secrets.outputs.CARGO_REGISTRIES_FLUENCE_TOKEN }}"
          NPM_CONFIG_REGISTRY: "https://npm.fluence.dev"
        run: pnpm test

      - name: Cleanup
        if: always()
        run: rm -rf tmp ~/.fluence

      - name: Dump rust-peer logs
        if: always()
        uses: jwalton/gh-docker-logs@v2
