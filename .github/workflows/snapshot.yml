name: Build fluence-cli snapshot

on:
  workflow_call:
    inputs:
      ref:
        description: "Git ref to checkout to"
        type: string
        default: "main"
      marine-version:
        description: "marine version"
        type: string
        default: "null"
      mrepl-version:
        description: "mrepl version"
        type: string
        default: "null"
      marine-rs-sdk-version:
        description: "marine-rs-sdk version"
        type: string
        default: "null"
      marine-rs-sdk-test-version:
        description: "marine-rs-sdk-test version"
        type: string
        default: "null"
      js-client-snapshots:
        description: "js-client snapshots"
        type: string
        default: "null"
      aqua-snapshots:
        description: "aqua snapshots"
        type: string
        default: "null"
      spell-version:
        description: "@fluencelabs/spell version"
        type: string
        default: "null"
      installation-spell-version:
        description: "@fluencelabs/installation-spell version"
        type: string
        default: "null"
    outputs:
      version:
        description: "@fluencelabs/cli version"
        value: ${{ jobs.snapshot.outputs.version }}

env:
  CI: true
  FORCE_COLOR: true

jobs:
  snapshot:
    name: "Build snapshot"
    runs-on: builder

    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    outputs:
      version: ${{ steps.snapshot.outputs.version }}

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout fluence-cli
        uses: actions/checkout@v4
        with:
          repository: fluencelabs/cli
          ref: ${{ inputs.ref }}

      - name: Import secrets
        uses: hashicorp/vault-action@v3.0.0
        id: secrets
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/npm-registry/basicauth/ci token | NODE_AUTH_TOKEN;
            kv/cargo-registry/users/ci token | CARGO_REGISTRIES_FLUENCE_TOKEN;
            kv/ci/fcli-binaries id | AWS_ACCESS_KEY_ID ;
            kv/ci/fcli-binaries secret | AWS_SECRET_ACCESS_KEY

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Setup node with self-hosted npm registry
        uses: actions/setup-node@v4
        with:
          node-version: "18.20.3"
          registry-url: "https://npm.fluence.dev"
          cache: "yarn"

      - name: Configure yarn to publish to private registry
        run: |
          yarn config set npmRegistryServer "https://npm.fluence.dev"
          yarn config set npmAlwaysAuth true
          yarn config set npmAuthToken $NODE_AUTH_TOKEN

      - run: yarn install

      - run: yarn install
        working-directory: cli

      - name: Set js-client version
        if: inputs.js-client-snapshots != 'null'
        uses: fluencelabs/github-actions/npm-set-dependency@main
        with:
          package: "@fluencelabs/js-client"
          version: ${{ fromJson(inputs.js-client-snapshots)['js-client'] }}
          package-manager: yarn
          working-directory: cli

      - name: Set aqua-api version
        if: inputs.aqua-snapshots != 'null'
        uses: fluencelabs/github-actions/npm-set-dependency@main
        with:
          package: "@fluencelabs/aqua-api"
          version: "${{ fromJson(inputs.aqua-snapshots)['aqua-api'] }}"
          package-manager: yarn
          working-directory: cli

      - name: Set installation-spell version
        if: inputs.installation-spell-version != 'null'
        uses: fluencelabs/github-actions/npm-set-dependency@main
        with:
          package: "@fluencelabs/installation-spell"
          version: "${{ inputs.installation-spell-version }}"
          package-manager: yarn
          flags: "--dev"
          working-directory: cli

      - name: Update versions.json
        uses: ./.github/actions/replace-version
        with:
          versions: |
            {
              "npm": {
                "@fluencelabs/spell": "${{ inputs.spell-version == 'null' && 'null' || inputs.spell-version }}"
              },
              "cargo": {
                "marine": "${{ inputs.marine-version }}",
                "mrepl": "${{ inputs.mrepl-version }}",
                "marine-rs-sdk": "${{ inputs.marine-rs-sdk-version }}",
                "marine-rs-sdk-test": "${{ inputs.marine-rs-sdk-test-version }}"
              }
            }

      - name: Generate snapshot version
        id: version
        uses: fluencelabs/github-actions/generate-snapshot-id@main

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Build
        run: yarn build

      - name: Build CLI
        run: yarn build
        working-directory: cli

      - name: Pack Fluence CLI for Linux and macOS
        run: yarn pack-ci
        working-directory: cli

      - name: Upload linux-x64 to CI checks
        uses: actions/upload-artifact@v4
        with:
          name: fcli
          path: fluence-cli-linux-x64.tar.gz

      - name: Upload darwin-arm64 to CI checks
        uses: actions/upload-artifact@v4
        with:
          name: fcli-macos
          path: fluence-cli-darwin-arm64.tar.gz
