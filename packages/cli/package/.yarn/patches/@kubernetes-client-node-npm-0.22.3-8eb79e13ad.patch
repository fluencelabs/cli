diff --git a/dist/config.d.ts b/dist/config.d.ts
index 1a9dc3f617ad452c0c706c4acdd2218972d8e266..ba3f6a70d22db6e5ff92f1d6f6a58686cdad5bee 100644
--- a/dist/config.d.ts
+++ b/dist/config.d.ts
@@ -21,7 +21,7 @@ export declare class KubeConfig {
      * The name of the current context
      */
     'currentContext': string;
-    constructor();
+    constructor(fileAbsolutePath: string);
     getContexts(): Context[];
     getClusters(): Cluster[];
     getUsers(): User[];
diff --git a/dist/config.js b/dist/config.js
index 5d1c5fab964caad82ddd2a51c578cfdf17f5e670..55a049f61b124238a24a49ff7581c97bbbf0c491 100644
--- a/dist/config.js
+++ b/dist/config.js
@@ -29,11 +29,11 @@ function fileExists(filepath) {
     }
 }
 class KubeConfig {
-    constructor() {
+    constructor(fileAbsolutePath) {
         this.authenticators = [
             new azure_auth_1.AzureAuth(),
             new gcp_auth_1.GoogleCloudPlatformAuth(),
-            new exec_auth_1.ExecAuth(),
+            new exec_auth_1.ExecAuth(fileAbsolutePath),
             new file_auth_1.FileAuth(),
             new oidc_auth_delayed_1.DelayedOpenIDConnectAuth(),
         ];
diff --git a/dist/exec_auth.d.ts b/dist/exec_auth.d.ts
index 2ad8f45ff3108f959c1979a172542dc1d336ad99..94f954a938ec0b742b372a3f83e29a99853b5106 100644
--- a/dist/exec_auth.d.ts
+++ b/dist/exec_auth.d.ts
@@ -12,6 +12,7 @@ export interface Credential {
     readonly status: CredentialStatus;
 }
 export declare class ExecAuth implements Authenticator {
+    constructor(fileAbsolutePath: string);
     private readonly tokenCache;
     private execFn;
     isAuthProvider(user: User): boolean;
diff --git a/dist/exec_auth.js b/dist/exec_auth.js
index 756948464276208c3daedf922dc37684ab247040..9e77c934a1aa5a054a9b28fbd7c6cde60a908ce9 100644
--- a/dist/exec_auth.js
+++ b/dist/exec_auth.js
@@ -3,9 +3,10 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.ExecAuth = void 0;
 const child_process = require("child_process");
 class ExecAuth {
-    constructor() {
+    constructor(fileAbsolutePath) {
         this.tokenCache = {};
         this.execFn = child_process.spawnSync;
+        this.fileAbsolutePath = fileAbsolutePath;
     }
     isAuthProvider(user) {
         if (!user) {
@@ -48,14 +49,15 @@ class ExecAuth {
         return null;
     }
     getCredential(user) {
+        const key = `${user.name}:${this.fileAbsolutePath}`;
         // TODO: Add a unit test for token caching.
-        const cachedToken = this.tokenCache[user.name];
+        const cachedToken = this.tokenCache[key];
         if (cachedToken) {
             const date = Date.parse(cachedToken.status.expirationTimestamp);
             if (date > Date.now()) {
                 return cachedToken;
             }
-            this.tokenCache[user.name] = null;
+            this.tokenCache[key] = null;
         }
         let exec = null;
         if (user.authProvider && user.authProvider.config) {
@@ -81,7 +83,7 @@ class ExecAuth {
         const result = this.execFn(exec.command, exec.args, opts);
         if (result.status === 0) {
             const obj = JSON.parse(result.stdout.toString('utf8'));
-            this.tokenCache[user.name] = obj;
+            this.tokenCache[key] = obj;
             return obj;
         }
         throw new Error(result.stderr.toString('utf8'));
