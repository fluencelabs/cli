diff --git a/lib/commands/pack/win.js b/lib/commands/pack/win.js
index 36ffafcdb8b92678a7e8e2e2205fd5e877ca2e00..483d38a31da5120501e1ad7b757246c86dcf26b8 100644
--- a/lib/commands/pack/win.js
+++ b/lib/commands/pack/win.js
@@ -14,12 +14,13 @@ const scripts = {
     /* eslint-disable no-useless-escape */
     cmd: (config, additionalCLI) => `@echo off
 setlocal enableextensions
+set NODE_NO_WARNINGS=1
 
 set ${additionalCLI ? `${additionalCLI.toUpperCase()}_BINPATH` : config.scopedEnvVarKey('BINPATH')}=%~dp0\\${additionalCLI ?? config.bin}.cmd
 if exist "%LOCALAPPDATA%\\${config.dirname}\\client\\bin\\${additionalCLI ?? config.bin}.cmd" (
   "%LOCALAPPDATA%\\${config.dirname}\\client\\bin\\${additionalCLI ?? config.bin}.cmd" %*
 ) else (
-  "%~dp0\\..\\client\\bin\\node.exe" "%~dp0\\..\\client\\${additionalCLI ? `${additionalCLI}\\bin\\run` : 'bin\\run'}" %*
+  "%~dp0\\..\\client\\bin\\fluence.cmd" %*
 )
 `,
     nsis: ({ arch, config, customization, defenderOptionDefault, hideDefenderOption, }) => `!include MUI2.nsh
@@ -239,7 +240,7 @@ the CLI should already exist in a directory named after the CLI that is the root
         const { config } = buildConfig;
         const nsisCustomization = config.nsisCustomization ? (0, node_fs_1.readFileSync)(config.nsisCustomization, 'utf8') : '';
         const arches = buildConfig.targets.filter((t) => t.platform === 'win32').map((t) => t.arch);
-        await Tarballs.build(buildConfig, { pack: false, parallel: true, platform: 'win32', tarball: flags.tarball });
+        await Tarballs.build(buildConfig, { pack: true, parallel: true, platform: 'win32', tarball: flags.tarball });
         await Promise.all(arches.map(async (arch) => {
             const installerBase = path.join(buildConfig.tmp, `windows-${arch}-installer`);
             await (0, promises_1.rm)(installerBase, { force: true, recursive: true });
diff --git a/lib/tarballs/bin.js b/lib/tarballs/bin.js
index f05f8a117a9e06d55fe0cf0a93a7cae6db357d2a..452307d11234348effef6c28e4c997a344d9fe2b 100644
--- a/lib/tarballs/bin.js
+++ b/lib/tarballs/bin.js
@@ -33,6 +33,8 @@ if exist "%~dp0..\\bin\\node.exe" (
     const writeUnix = async () => {
         const bin = path.join(baseWorkspace, 'bin', config.bin);
         await fs.promises.writeFile(bin, `#!/usr/bin/env bash
+export NODE_NO_WARNINGS=1
+
 set -e
 echoerr() { echo "$@" 1>&2; }
 
