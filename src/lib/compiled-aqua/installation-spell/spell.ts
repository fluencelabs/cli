/**
 * Copyright 2022 Fluence Labs Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

export const spellInstallAirScript = `; This file is auto-generated. Do not edit manually: changes may be erased.
; Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
; If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
; Aqua version: 0.9.4

(xor
 (seq
  (seq
   (seq
    (seq
     (call %init_peer_id% ("getDataSrv" "ipfs") [] ipfs)
     (call %init_peer_id% ("getDataSrv" "worker_def_cid") [] worker_def_cid)
    )
    (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id)
   )
   (call %init_peer_id% ("aqua-ipfs" "cat_from") [worker_def_cid ipfs] json)
  )
  (xor
   (match json.$.success! true
    (xor
     (seq
      (seq
       (call %init_peer_id% ("json" "parse") [json.$.contents!] worker_definition)
       (xor
        (par
         (call %init_peer_id% ("run-console" "print") [worker_definition])
         (null)
        )
        (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 1])
       )
      )
      (fold worker_definition.$.services! s-0
       (seq
        (new $hashes
         (seq
          (seq
           (seq
            (seq
             (fold s-0.$.modules! m-0
              (seq
               (seq
                (seq
                 (seq
                  (seq
                   (seq
                    (call %init_peer_id% ("aqua-ipfs" "get_from") [m-0.$.wasm! ipfs] get_wasm)
                    (call %init_peer_id% ("aqua-ipfs" "cat_from") [m-0.$.config! ipfs] json_cfg)
                   )
                   (call %init_peer_id% ("json" "parse") [json_cfg.$.contents!] cfg)
                  )
                  (call %init_peer_id% ("dist" "add_module_from_vault") [get_wasm.$.path! cfg] hash)
                 )
                 (xor
                  (par
                   (seq
                    (new $array-inline
                     (seq
                      (seq
                       (ap cfg $array-inline)
                       (ap hash $array-inline)
                      )
                      (canon %init_peer_id% $array-inline  #array-inline-0)
                     )
                    )
                    (call %init_peer_id% ("run-console" "print") [#array-inline-0])
                   )
                   (null)
                  )
                  (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 2])
                 )
                )
                (call %init_peer_id% ("op" "concat_strings") ["hash:" hash] $hashes)
               )
               (next m-0)
              )
             )
             (par
              (canon %init_peer_id% $hashes  #hashes_canon)
              (null)
             )
            )
            (call %init_peer_id% ("dist" "make_blueprint") [s-0.$.name! #hashes_canon] blueprint)
           )
           (call %init_peer_id% ("dist" "add_blueprint") [blueprint] blueprint_id)
          )
          (xor
           (seq
            (new $result
             (seq
              (seq
               (seq
                (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-0)
                (call %init_peer_id% (spell_id-0 "exists") [s-0.$.name!] deployed)
               )
               (xor
                (match deployed.$.flag! true
                 (xor
                  (seq
                   (seq
                    (seq
                     (seq
                      (call %init_peer_id% ("op" "concat_strings") ["blueprint:" s-0.$.name!] concat_strings)
                      (call %init_peer_id% (spell_id-0 "get_string") [concat_strings] stored_blueprint)
                     )
                     (xor
                      (match stored_blueprint.$.str! blueprint_id
                       (ap true $result)
                      )
                      (ap false $result)
                     )
                    )
                    (new $array-inline-1
                     (seq
                      (seq
                       (seq
                        (seq
                         (seq
                          (ap deployed $array-inline-1)
                          (ap stored_blueprint $array-inline-1)
                         )
                         (ap blueprint_id $array-inline-1)
                        )
                        (canon %init_peer_id% $result  #push-to-stream-85)
                       )
                       (ap #push-to-stream-85 $array-inline-1)
                      )
                      (canon %init_peer_id% $array-inline-1  #array-inline-1-0)
                     )
                    )
                   )
                   (call %init_peer_id% ("run-console" "print") [#array-inline-1-0])
                  )
                  (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 3])
                 )
                )
                (ap false $result)
               )
              )
              (new $result_test
               (seq
                (seq
                 (seq
                  (call %init_peer_id% ("math" "add") [0 1] result_incr)
                  (fold $result s
                   (seq
                    (seq
                     (ap s $result_test)
                     (canon %init_peer_id% $result_test  #result_iter_canon)
                    )
                    (xor
                     (match #result_iter_canon.length result_incr
                      (null)
                     )
                     (next s)
                    )
                   )
                   (never)
                  )
                 )
                 (canon %init_peer_id% $result_test  #result_result_canon)
                )
                (ap #result_result_canon result_gate)
               )
              )
             )
            )
            (match result_gate.$.[0]! false
             (xor
              (seq
               (seq
                (seq
                 (call %init_peer_id% ("srv" "create") [blueprint_id] service_id)
                 (call %init_peer_id% (spell_id "set_string") [s-0.$.name! service_id])
                )
                (call %init_peer_id% ("op" "concat_strings") ["blueprint:" s-0.$.name!] concat_strings-0)
               )
               (call %init_peer_id% (spell_id "set_string") [concat_strings-0 blueprint_id])
              )
              (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 4])
             )
            )
           )
           (seq
            (call %init_peer_id% ("op" "concat_strings") [s-0.$.name! " is already deployed"] concat_strings-1)
            (call %init_peer_id% ("run-console" "print") [concat_strings-1])
           )
          )
         )
        )
        (next s-0)
       )
      )
     )
     (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 5])
    )
   )
   (call %init_peer_id% ("op" "noop") [])
  )
 )
 (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 6])
)
`;
