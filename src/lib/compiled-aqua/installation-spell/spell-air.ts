/**
 * Copyright 2023 Fluence Labs Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

export const spellInstallAirScript = `; This file is auto-generated. Do not edit manually: changes may be erased.
; Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
; If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
; Aqua version: 0.10.2

(xor
 (seq
  (seq
   (seq
    (seq
     (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
     (call %init_peer_id% ("getDataSrv" "ipfs") [] ipfs)
    )
    (call %init_peer_id% ("getDataSrv" "worker_def_cid") [] worker_def_cid)
   )
   (call %init_peer_id% ("getDataSrv" "deal_id") [] deal_id)
  )
  (new $worker_spell
   (new $reg_errs
    (new $cre_errs
     (seq
      (seq
       (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id)
       (xor
        (call %init_peer_id% ("srv" "resolve_alias") ["worker-spell"] $worker_spell)
        (seq
         (ap spell_id $worker_spell)
         (xor
          (seq
           (seq
            (seq
             (seq
              (call %init_peer_id% ("srv" "add_alias") ["worker-spell" spell_id])
              (new $array-inline
               (seq
                (seq
                 (ap "alias created 'worker-spell'" $array-inline)
                 (ap spell_id $array-inline)
                )
                (canon %init_peer_id% $array-inline  #array-inline-0)
               )
              )
             )
             (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-0)
            )
            (call %init_peer_id% ("debug" "stringify") [#array-inline-0] str)
           )
           (par
            (call %init_peer_id% (spell_id-0 "list_push_string") ["logs" str])
            (seq
             (new $array-inline-1
              (seq
               (seq
                (ap spell_id-0 $array-inline-1)
                (ap #array-inline-0 $array-inline-1)
               )
               (canon %init_peer_id% $array-inline-1  #array-inline-1-0)
              )
             )
             (call %init_peer_id% ("run-console" "print") [#array-inline-1-0])
            )
           )
          )
          (seq
           (seq
            (seq
             (new $array-inline-2
              (seq
               (seq
                (ap "error creating alias" $array-inline-2)
                (ap %last_error% $array-inline-2)
               )
               (canon %init_peer_id% $array-inline-2  #array-inline-2-0)
              )
             )
             (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-1)
            )
            (call %init_peer_id% ("debug" "stringify") [#array-inline-2-0] str-0)
           )
           (par
            (call %init_peer_id% (spell_id-1 "list_push_string") ["logs" str-0])
            (seq
             (new $array-inline-3
              (seq
               (seq
                (ap spell_id-1 $array-inline-3)
                (ap #array-inline-2-0 $array-inline-3)
               )
               (canon %init_peer_id% $array-inline-3  #array-inline-3-0)
              )
             )
             (call %init_peer_id% ("run-console" "print") [#array-inline-3-0])
            )
           )
          )
         )
        )
       )
      )
      (xor
       (seq
        (new $worker_spell_test
         (seq
          (seq
           (seq
            (call %init_peer_id% ("math" "add") [0 1] worker_spell_incr)
            (fold $worker_spell worker_spell_fold_var
             (seq
              (seq
               (ap worker_spell_fold_var $worker_spell_test)
               (canon %init_peer_id% $worker_spell_test  #worker_spell_iter_canon)
              )
              (xor
               (match #worker_spell_iter_canon.length worker_spell_incr
                (null)
               )
               (next worker_spell_fold_var)
              )
             )
             (never)
            )
           )
           (canon %init_peer_id% $worker_spell_test  #worker_spell_result_canon)
          )
          (ap #worker_spell_result_canon worker_spell_gate)
         )
        )
        (mismatch worker_spell_gate.$.[0]! spell_id
         (xor
          (seq
           (seq
            (seq
             (new $array-inline-4
              (seq
               (seq
                (seq
                 (seq
                  (ap "Another worker spell is deployed on this worker (existing, current)" $array-inline-4)
                  (new $worker_spell_test-0
                   (seq
                    (seq
                     (seq
                      (call %init_peer_id% ("math" "add") [0 1] worker_spell_incr-0)
                      (fold $worker_spell worker_spell_fold_var-0
                       (seq
                        (seq
                         (ap worker_spell_fold_var-0 $worker_spell_test-0)
                         (canon %init_peer_id% $worker_spell_test-0  #worker_spell_iter_canon-0)
                        )
                        (xor
                         (match #worker_spell_iter_canon-0.length worker_spell_incr-0
                          (null)
                         )
                         (next worker_spell_fold_var-0)
                        )
                       )
                       (never)
                      )
                     )
                     (canon %init_peer_id% $worker_spell_test-0  #worker_spell_result_canon-0)
                    )
                    (ap #worker_spell_result_canon-0 worker_spell_gate-0)
                   )
                  )
                 )
                 (ap worker_spell_gate-0.$.[0]! $array-inline-4)
                )
                (ap spell_id $array-inline-4)
               )
               (canon %init_peer_id% $array-inline-4  #array-inline-4-0)
              )
             )
             (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-2)
            )
            (call %init_peer_id% ("debug" "stringify") [#array-inline-4-0] str-1)
           )
           (par
            (call %init_peer_id% (spell_id-2 "list_push_string") ["logs" str-1])
            (seq
             (new $array-inline-5
              (seq
               (seq
                (ap spell_id-2 $array-inline-5)
                (ap #array-inline-4-0 $array-inline-5)
               )
               (canon %init_peer_id% $array-inline-5  #array-inline-5-0)
              )
             )
             (call %init_peer_id% ("run-console" "print") [#array-inline-5-0])
            )
           )
          )
          (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 1])
         )
        )
       )
       (seq
        (seq
         (seq
          (seq
           (seq
            (seq
             (seq
              (seq
               (seq
                (seq
                 (seq
                  (new $array-inline-6
                   (seq
                    (seq
                     (ap "Installing worker for deal" $array-inline-6)
                     (ap deal_id $array-inline-6)
                    )
                    (canon %init_peer_id% $array-inline-6  #array-inline-6-0)
                   )
                  )
                  (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-3)
                 )
                 (call %init_peer_id% ("debug" "stringify") [#array-inline-6-0] str-2)
                )
                (par
                 (call %init_peer_id% (spell_id-3 "list_push_string") ["logs" str-2])
                 (seq
                  (new $array-inline-7
                   (seq
                    (seq
                     (ap spell_id-3 $array-inline-7)
                     (ap #array-inline-6-0 $array-inline-7)
                    )
                    (canon %init_peer_id% $array-inline-7  #array-inline-7-0)
                   )
                  )
                  (call %init_peer_id% ("run-console" "print") [#array-inline-7-0])
                 )
                )
               )
               (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-4)
              )
              (xor
               (seq
                (call %init_peer_id% ("aqua-ipfs" "cat_from") [worker_def_cid ipfs] json)
                (xor
                 (match json.$.success! true
                  (xor
                   (seq
                    (seq
                     (seq
                      (seq
                       (seq
                        (seq
                         (seq
                          (seq
                           (seq
                            (call %init_peer_id% ("json" "parse") [json.$.contents!] worker_definition)
                            (new $array-inline-8
                             (seq
                              (seq
                               (ap "parsed worker definition" $array-inline-8)
                               (ap worker_definition $array-inline-8)
                              )
                              (canon %init_peer_id% $array-inline-8  #array-inline-8-0)
                             )
                            )
                           )
                           (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-5)
                          )
                          (call %init_peer_id% ("debug" "stringify") [#array-inline-8-0] str-3)
                         )
                         (par
                          (call %init_peer_id% (spell_id-5 "list_push_string") ["logs" str-3])
                          (seq
                           (new $array-inline-9
                            (seq
                             (seq
                              (ap spell_id-5 $array-inline-9)
                              (ap #array-inline-8-0 $array-inline-9)
                             )
                             (canon %init_peer_id% $array-inline-9  #array-inline-9-0)
                            )
                           )
                           (call %init_peer_id% ("run-console" "print") [#array-inline-9-0])
                          )
                         )
                        )
                        (fold worker_definition.$.services! s-0
                         (seq
                          (new $hashes
                           (xor
                            (seq
                             (seq
                              (seq
                               (seq
                                (fold s-0.$.modules! m-0
                                 (seq
                                  (seq
                                   (seq
                                    (seq
                                     (seq
                                      (call %init_peer_id% ("aqua-ipfs" "get_from") [m-0.$.wasm! ipfs] get_wasm)
                                      (call %init_peer_id% ("aqua-ipfs" "cat_from") [m-0.$.config! ipfs] json_cfg)
                                     )
                                     (call %init_peer_id% ("json" "parse") [json_cfg.$.contents!] cfg)
                                    )
                                    (call %init_peer_id% ("dist" "add_module_from_vault") [get_wasm.$.path! cfg] hash)
                                   )
                                   (call %init_peer_id% ("op" "concat_strings") ["hash:" hash] $hashes)
                                  )
                                  (next m-0)
                                 )
                                )
                                (par
                                 (canon %init_peer_id% $hashes  #hashes_canon)
                                 (null)
                                )
                               )
                               (call %init_peer_id% ("dist" "make_blueprint") [s-0.$.name! #hashes_canon] blueprint)
                              )
                              (call %init_peer_id% ("dist" "add_blueprint") [blueprint] blueprint_id)
                             )
                             (xor
                              (seq
                               (new $result
                                (seq
                                 (seq
                                  (seq
                                   (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-6)
                                   (call %init_peer_id% (spell_id-6 "exists") [s-0.$.name!] deployed)
                                  )
                                  (xor
                                   (match deployed.$.flag! true
                                    (xor
                                     (seq
                                      (seq
                                       (call %init_peer_id% ("op" "concat_strings") ["blueprint:" s-0.$.name!] concat_strings)
                                       (call %init_peer_id% (spell_id-6 "get_string") [concat_strings] stored_blueprint)
                                      )
                                      (xor
                                       (match stored_blueprint.$.str! blueprint_id
                                        (ap true $result)
                                       )
                                       (ap false $result)
                                      )
                                     )
                                     (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 2])
                                    )
                                   )
                                   (ap false $result)
                                  )
                                 )
                                 (new $result_test
                                  (seq
                                   (seq
                                    (seq
                                     (call %init_peer_id% ("math" "add") [0 1] result_incr)
                                     (fold $result result_fold_var
                                      (seq
                                       (seq
                                        (ap result_fold_var $result_test)
                                        (canon %init_peer_id% $result_test  #result_iter_canon)
                                       )
                                       (xor
                                        (match #result_iter_canon.length result_incr
                                         (null)
                                        )
                                        (next result_fold_var)
                                       )
                                      )
                                      (never)
                                     )
                                    )
                                    (canon %init_peer_id% $result_test  #result_result_canon)
                                   )
                                   (ap #result_result_canon result_gate)
                                  )
                                 )
                                )
                               )
                               (match result_gate.$.[0]! false
                                (xor
                                 (seq
                                  (seq
                                   (seq
                                    (seq
                                     (seq
                                      (seq
                                       (seq
                                        (seq
                                         (seq
                                          (call %init_peer_id% (spell_id-4 "set_string") ["status" "install in progress"])
                                          (call %init_peer_id% ("srv" "create") [blueprint_id] service_id)
                                         )
                                         (new $array-inline-10
                                          (seq
                                           (seq
                                            (seq
                                             (ap "Created service" $array-inline-10)
                                             (ap s-0.$.name! $array-inline-10)
                                            )
                                            (ap service_id $array-inline-10)
                                           )
                                           (canon %init_peer_id% $array-inline-10  #array-inline-10-0)
                                          )
                                         )
                                        )
                                        (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-7)
                                       )
                                       (call %init_peer_id% ("debug" "stringify") [#array-inline-10-0] str-4)
                                      )
                                      (par
                                       (call %init_peer_id% (spell_id-7 "list_push_string") ["logs" str-4])
                                       (seq
                                        (new $array-inline-11
                                         (seq
                                          (seq
                                           (ap spell_id-7 $array-inline-11)
                                           (ap #array-inline-10-0 $array-inline-11)
                                          )
                                          (canon %init_peer_id% $array-inline-11  #array-inline-11-0)
                                         )
                                        )
                                        (call %init_peer_id% ("run-console" "print") [#array-inline-11-0])
                                       )
                                      )
                                     )
                                     (xor
                                      (call %init_peer_id% ("srv" "add_alias") [s-0.$.name! service_id])
                                      (seq
                                       (seq
                                        (seq
                                         (new $array-inline-12
                                          (seq
                                           (seq
                                            (seq
                                             (seq
                                              (ap "Error creating alias for deployed service" $array-inline-12)
                                              (ap s-0.$.name! $array-inline-12)
                                             )
                                             (ap service_id $array-inline-12)
                                            )
                                            (ap %last_error% $array-inline-12)
                                           )
                                           (canon %init_peer_id% $array-inline-12  #array-inline-12-0)
                                          )
                                         )
                                         (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-8)
                                        )
                                        (call %init_peer_id% ("debug" "stringify") [#array-inline-12-0] str-5)
                                       )
                                       (par
                                        (call %init_peer_id% (spell_id-8 "list_push_string") ["logs" str-5])
                                        (seq
                                         (new $array-inline-13
                                          (seq
                                           (seq
                                            (ap spell_id-8 $array-inline-13)
                                            (ap #array-inline-12-0 $array-inline-13)
                                           )
                                           (canon %init_peer_id% $array-inline-13  #array-inline-13-0)
                                          )
                                         )
                                         (call %init_peer_id% ("run-console" "print") [#array-inline-13-0])
                                        )
                                       )
                                      )
                                     )
                                    )
                                    (call %init_peer_id% (spell_id-4 "set_string") [s-0.$.name! service_id])
                                   )
                                   (call %init_peer_id% ("op" "concat_strings") ["blueprint:" s-0.$.name!] concat_strings-0)
                                  )
                                  (call %init_peer_id% (spell_id-4 "set_string") [concat_strings-0 blueprint_id])
                                 )
                                 (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 3])
                                )
                               )
                              )
                              (seq
                               (seq
                                (seq
                                 (new $array-inline-14
                                  (seq
                                   (seq
                                    (ap s-0.$.name! $array-inline-14)
                                    (ap "is already deployed, doing nothing" $array-inline-14)
                                   )
                                   (canon %init_peer_id% $array-inline-14  #array-inline-14-0)
                                  )
                                 )
                                 (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-9)
                                )
                                (call %init_peer_id% ("debug" "stringify") [#array-inline-14-0] str-6)
                               )
                               (par
                                (call %init_peer_id% (spell_id-9 "list_push_string") ["logs" str-6])
                                (seq
                                 (new $array-inline-15
                                  (seq
                                   (seq
                                    (ap spell_id-9 $array-inline-15)
                                    (ap #array-inline-14-0 $array-inline-15)
                                   )
                                   (canon %init_peer_id% $array-inline-15  #array-inline-15-0)
                                  )
                                 )
                                 (call %init_peer_id% ("run-console" "print") [#array-inline-15-0])
                                )
                               )
                              )
                             )
                            )
                            (seq
                             (seq
                              (seq
                               (new $array-inline-16
                                (seq
                                 (seq
                                  (seq
                                   (ap "Error deploying service" $array-inline-16)
                                   (ap s-0.$.name! $array-inline-16)
                                  )
                                  (ap %last_error% $array-inline-16)
                                 )
                                 (canon %init_peer_id% $array-inline-16  #array-inline-16-0)
                                )
                               )
                               (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-10)
                              )
                              (call %init_peer_id% ("debug" "stringify") [#array-inline-16-0] str-7)
                             )
                             (par
                              (call %init_peer_id% (spell_id-10 "list_push_string") ["logs" str-7])
                              (seq
                               (new $array-inline-17
                                (seq
                                 (seq
                                  (ap spell_id-10 $array-inline-17)
                                  (ap #array-inline-16-0 $array-inline-17)
                                 )
                                 (canon %init_peer_id% $array-inline-17  #array-inline-17-0)
                                )
                               )
                               (call %init_peer_id% ("run-console" "print") [#array-inline-17-0])
                              )
                             )
                            )
                           )
                          )
                          (next s-0)
                         )
                        )
                       )
                       (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-11)
                      )
                      (call %init_peer_id% ("debug" "stringify") ["Installation finished"] str-8)
                     )
                     (par
                      (call %init_peer_id% (spell_id-11 "list_push_string") ["logs" str-8])
                      (seq
                       (new $array-inline-18
                        (seq
                         (seq
                          (ap spell_id-11 $array-inline-18)
                          (ap "Installation finished" $array-inline-18)
                         )
                         (canon %init_peer_id% $array-inline-18  #array-inline-18-0)
                        )
                       )
                       (call %init_peer_id% ("run-console" "print") [#array-inline-18-0])
                      )
                     )
                    )
                    (call %init_peer_id% (spell_id-4 "set_string") ["status" "install finished"])
                   )
                   (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 4])
                  )
                 )
                 (seq
                  (seq
                   (seq
                    (seq
                     (new $array-inline-19
                      (seq
                       (seq
                        (seq
                         (seq
                          (ap "Error downloading worker definition from IPFS" $array-inline-19)
                          (ap ipfs $array-inline-19)
                         )
                         (ap worker_def_cid $array-inline-19)
                        )
                        (ap json $array-inline-19)
                       )
                       (canon %init_peer_id% $array-inline-19  #array-inline-19-0)
                      )
                     )
                     (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-12)
                    )
                    (call %init_peer_id% ("debug" "stringify") [#array-inline-19-0] str-9)
                   )
                   (par
                    (call %init_peer_id% (spell_id-12 "list_push_string") ["logs" str-9])
                    (seq
                     (new $array-inline-20
                      (seq
                       (seq
                        (ap spell_id-12 $array-inline-20)
                        (ap #array-inline-19-0 $array-inline-20)
                       )
                       (canon %init_peer_id% $array-inline-20  #array-inline-20-0)
                      )
                     )
                     (call %init_peer_id% ("run-console" "print") [#array-inline-20-0])
                    )
                   )
                  )
                  (call %init_peer_id% (spell_id-4 "set_string") ["status" "install error"])
                 )
                )
               )
               (seq
                (seq
                 (seq
                  (seq
                   (new $array-inline-21
                    (seq
                     (seq
                      (ap "Error installing worker" $array-inline-21)
                      (ap %last_error% $array-inline-21)
                     )
                     (canon %init_peer_id% $array-inline-21  #array-inline-21-0)
                    )
                   )
                   (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-13)
                  )
                  (call %init_peer_id% ("debug" "stringify") [#array-inline-21-0] str-10)
                 )
                 (par
                  (call %init_peer_id% (spell_id-13 "list_push_string") ["logs" str-10])
                  (seq
                   (new $array-inline-22
                    (seq
                     (seq
                      (ap spell_id-13 $array-inline-22)
                      (ap #array-inline-21-0 $array-inline-22)
                     )
                     (canon %init_peer_id% $array-inline-22  #array-inline-22-0)
                    )
                   )
                   (call %init_peer_id% ("run-console" "print") [#array-inline-22-0])
                  )
                 )
                )
                (call %init_peer_id% (spell_id-4 "set_string") ["status" "install error"])
               )
              )
             )
             (call %init_peer_id% (spell_id "get_string") ["status"] status)
            )
            (new $array-inline-23
             (seq
              (seq
               (ap "Worker installation finished with status" $array-inline-23)
               (ap status.$.str! $array-inline-23)
              )
              (canon %init_peer_id% $array-inline-23  #array-inline-23-0)
             )
            )
           )
           (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-14)
          )
          (call %init_peer_id% ("debug" "stringify") [#array-inline-23-0] str-11)
         )
         (par
          (call %init_peer_id% (spell_id-14 "list_push_string") ["logs" str-11])
          (seq
           (new $array-inline-24
            (seq
             (seq
              (ap spell_id-14 $array-inline-24)
              (ap #array-inline-23-0 $array-inline-24)
             )
             (canon %init_peer_id% $array-inline-24  #array-inline-24-0)
            )
           )
           (call %init_peer_id% ("run-console" "print") [#array-inline-24-0])
          )
         )
        )
        (xor
         (match status.$.str! "install finished"
          (xor
           (seq
            (seq
             (seq
              (seq
               (seq
                (new $successful
                 (new $subnetwork_id
                  (seq
                   (seq
                    (seq
                     (call %init_peer_id% ("peer" "timestamp_sec") [] t)
                     (xor
                      (seq
                       (seq
                        (seq
                         (seq
                          (call -relay- ("insecure_sig" "get_peer_id") [] peer_id)
                          (new $option-inline
                           (seq
                            (xor
                             (ap peer_id $option-inline)
                             (null)
                            )
                            (canon -relay- $option-inline  #option-inline-0)
                           )
                          )
                         )
                         (call -relay- ("registry" "get_key_bytes") [deal_id #option-inline-0 t [] ""] bytes)
                        )
                        (call -relay- ("insecure_sig" "sign") [bytes] result-0)
                       )
                       (xor
                        (match result-0.$.success! false
                         (ap result-0.$.error.[0]! $error)
                        )
                        (seq
                         (seq
                          (seq
                           (seq
                            (seq
                             (seq
                              (ap result-0.$.signature! result-0_flat)
                              (call -relay- ("registry" "get_key_id") [deal_id peer_id] id)
                             )
                             (call -relay- ("op" "string_to_b58") [id] k)
                            )
                            (call -relay- ("kad" "neighborhood") [k [] []] nodes)
                           )
                           (xor
                            (par
                             (fold nodes n-0
                              (par
                               (seq
                                (xor
                                 (xor
                                  (seq
                                   (seq
                                    (seq
                                     (seq
                                      (call n-0 ("peer" "timestamp_sec") [] t-0)
                                      (call n-0 ("trust-graph" "get_weight") [peer_id t-0] weight)
                                     )
                                     (new $option-inline-1
                                      (seq
                                       (xor
                                        (ap peer_id $option-inline-1)
                                        (null)
                                       )
                                       (canon n-0 $option-inline-1  #option-inline-1-0)
                                      )
                                     )
                                    )
                                    (call n-0 ("registry" "register_key") [deal_id #option-inline-1-0 t [] "" result-0_flat.$.[0]! weight t-0] result-1)
                                   )
                                   (xor
                                    (match result-1.$.success! true
                                     (ap true $successful)
                                    )
                                    (ap result-1.$.error! $error)
                                   )
                                  )
                                  (call n-0 ("op" "noop") [])
                                 )
                                 (seq
                                  (call -relay- ("op" "noop") [])
                                  (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 5])
                                 )
                                )
                                (call -relay- ("op" "noop") [])
                               )
                               (next n-0)
                              )
                              (never)
                             )
                             (null)
                            )
                            (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 6])
                           )
                          )
                          (new $status-0
                           (new $result-2
                            (seq
                             (seq
                              (seq
                               (par
                                (seq
                                 (seq
                                  (seq
                                   (call -relay- ("math" "sub") [1 1] sub)
                                   (new $successful_test
                                    (seq
                                     (seq
                                      (seq
                                       (call -relay- ("math" "add") [sub 1] successful_incr)
                                       (fold $successful successful_fold_var
                                        (seq
                                         (seq
                                          (ap successful_fold_var $successful_test)
                                          (canon -relay- $successful_test  #successful_iter_canon)
                                         )
                                         (xor
                                          (match #successful_iter_canon.length successful_incr
                                           (null)
                                          )
                                          (next successful_fold_var)
                                         )
                                        )
                                        (never)
                                       )
                                      )
                                      (canon -relay- $successful_test  #successful_result_canon)
                                     )
                                     (ap #successful_result_canon successful_gate)
                                    )
                                   )
                                  )
                                  (call -relay- ("math" "sub") [1 1] sub-0)
                                 )
                                 (ap "ok" $status-0)
                                )
                                (call -relay- ("peer" "timeout") [6000 "timeout"] $status-0)
                               )
                               (new $status-0_test
                                (seq
                                 (seq
                                  (seq
                                   (call -relay- ("math" "add") [0 1] status-0_incr)
                                   (fold $status-0 status-0_fold_var
                                    (seq
                                     (seq
                                      (ap status-0_fold_var $status-0_test)
                                      (canon -relay- $status-0_test  #status-0_iter_canon)
                                     )
                                     (xor
                                      (match #status-0_iter_canon.length status-0_incr
                                       (null)
                                      )
                                      (next status-0_fold_var)
                                     )
                                    )
                                    (never)
                                   )
                                  )
                                  (canon -relay- $status-0_test  #status-0_result_canon)
                                 )
                                 (ap #status-0_result_canon status-0_gate)
                                )
                               )
                              )
                              (xor
                               (match status-0_gate.$.[0]! "ok"
                                (ap true $result-2)
                               )
                               (ap false $result-2)
                              )
                             )
                             (new $result-2_test
                              (seq
                               (seq
                                (seq
                                 (call -relay- ("math" "add") [0 1] result-2_incr)
                                 (fold $result-2 result-2_fold_var
                                  (seq
                                   (seq
                                    (ap result-2_fold_var $result-2_test)
                                    (canon -relay- $result-2_test  #result-2_iter_canon)
                                   )
                                   (xor
                                    (match #result-2_iter_canon.length result-2_incr
                                     (null)
                                    )
                                    (next result-2_fold_var)
                                   )
                                  )
                                  (never)
                                 )
                                )
                                (canon -relay- $result-2_test  #result-2_result_canon)
                               )
                               (ap #result-2_result_canon result-2_gate)
                              )
                             )
                            )
                           )
                          )
                         )
                         (xor
                          (match result-2_gate.$.[0]! false
                           (ap "key wasn't created: timeout exceeded" $error)
                          )
                          (ap id $subnetwork_id)
                         )
                        )
                       )
                      )
                      (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 7])
                     )
                    )
                    (canon %init_peer_id% $subnetwork_id  #-subnetwork_id-fix-0)
                   )
                   (ap #-subnetwork_id-fix-0 -subnetwork_id-flat-0)
                  )
                 )
                )
                (new $array-inline-25
                 (seq
                  (seq
                   (ap "Subnet created" $array-inline-25)
                   (ap -subnetwork_id-flat-0 $array-inline-25)
                  )
                  (canon %init_peer_id% $array-inline-25  #array-inline-25-0)
                 )
                )
               )
               (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-15)
              )
              (call %init_peer_id% ("debug" "stringify") [#array-inline-25-0] str-12)
             )
             (par
              (call %init_peer_id% (spell_id-15 "list_push_string") ["logs" str-12])
              (seq
               (new $array-inline-26
                (seq
                 (seq
                  (ap spell_id-15 $array-inline-26)
                  (ap #array-inline-25-0 $array-inline-26)
                 )
                 (canon %init_peer_id% $array-inline-26  #array-inline-26-0)
                )
               )
               (call %init_peer_id% ("run-console" "print") [#array-inline-26-0])
              )
             )
            )
            (xor
             (mismatch -subnetwork_id-flat-0 []
              (xor
               (seq
                (xor
                 (new $successful-0
                  (new $error_get
                   (new $success
                    (seq
                     (seq
                      (seq
                       (new $error-1
                        (new $result-3
                         (seq
                          (seq
                           (seq
                            (seq
                             (seq
                              (seq
                               (seq
                                (seq
                                 (call -relay- ("peer" "timestamp_sec") [] t-2)
                                 (new $option-inline-2
                                  (seq
                                   (xor
                                    (ap -relay- $option-inline-2)
                                    (null)
                                   )
                                   (canon -relay- $option-inline-2  #option-inline-2-0)
                                  )
                                 )
                                )
                                (call -relay- ("registry" "get_record_metadata_bytes") [-subnetwork_id-flat-0.$.[0]! %init_peer_id% t-2 "" %init_peer_id% #option-inline-2-0 [] []] bytes-0)
                               )
                               (xor
                                (call %init_peer_id% ("sig" "sign") [bytes-0] sig_result-0)
                                (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 8])
                               )
                              )
                              (xor
                               (match sig_result-0.$.success! true
                                (xor
                                 (call -relay- ("registry" "create_record_metadata") [-subnetwork_id-flat-0.$.[0]! %init_peer_id% t-2 "" %init_peer_id% #option-inline-2-0 [] [] sig_result-0.$.signature.[0]!] $result-3)
                                 (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 9])
                                )
                               )
                               (ap sig_result-0.$.error.[0]! $error-1)
                              )
                             )
                             (canon -relay- $result-3  #-result-fix-0)
                            )
                            (ap #-result-fix-0 -result-flat-0)
                           )
                           (canon -relay- $error-1  #-error-fix-1)
                          )
                          (ap #-error-fix-1 -error-flat-1)
                         )
                        )
                       )
                       (xor
                        (match -result-flat-0 []
                         (seq
                          (ap false $success)
                          (ap -error-flat-1.$.[0]! $error-0)
                         )
                        )
                        (seq
                         (seq
                          (call -relay- ("peer" "timestamp_sec") [] t-1)
                          (new $signature
                           (seq
                            (seq
                             (call -relay- ("registry" "get_record_bytes") [-result-flat-0.$.[0]! t-1] bytes-1)
                             (xor
                              (call %init_peer_id% ("sig" "sign") [bytes-1] $signature)
                              (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 10])
                             )
                            )
                            (new $signature_test
                             (seq
                              (seq
                               (seq
                                (call -relay- ("math" "add") [0 1] signature_incr)
                                (fold $signature signature_fold_var
                                 (seq
                                  (seq
                                   (ap signature_fold_var $signature_test)
                                   (canon -relay- $signature_test  #signature_iter_canon)
                                  )
                                  (xor
                                   (match #signature_iter_canon.length signature_incr
                                    (null)
                                   )
                                   (next signature_fold_var)
                                  )
                                 )
                                 (never)
                                )
                               )
                               (canon -relay- $signature_test  #signature_result_canon)
                              )
                              (ap #signature_result_canon signature_gate)
                             )
                            )
                           )
                          )
                         )
                         (xor
                          (match signature_gate.$.[0].success! false
                           (seq
                            (ap signature_gate.$.[0].error.[0]! $error-0)
                            (ap false $success)
                           )
                          )
                          (seq
                           (new $resources
                            (new $successful-1
                             (new $result-4
                              (seq
                               (seq
                                (seq
                                 (seq
                                  (seq
                                   (seq
                                    (call -relay- ("op" "string_to_b58") [-subnetwork_id-flat-0.$.[0]!] k-0)
                                    (call -relay- ("kad" "neighborhood") [k-0 [] []] nodes-2)
                                   )
                                   (par
                                    (fold nodes-2 n-2-0
                                     (par
                                      (seq
                                       (xor
                                        (xor
                                         (seq
                                          (call n-2-0 ("registry" "get_key_metadata") [-subnetwork_id-flat-0.$.[0]!] get_result)
                                          (xor
                                           (match get_result.$.success! true
                                            (seq
                                             (ap get_result.$.key! $resources)
                                             (ap true $successful-1)
                                            )
                                           )
                                           (seq
                                            (call n-2-0 ("op" "concat_strings") [get_result.$.error! " on "] e)
                                            (call n-2-0 ("op" "concat_strings") [e n-2-0] $error-2)
                                           )
                                          )
                                         )
                                         (call n-2-0 ("op" "noop") [])
                                        )
                                        (seq
                                         (call -relay- ("op" "noop") [])
                                         (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 11])
                                        )
                                       )
                                       (call -relay- ("op" "noop") [])
                                      )
                                      (next n-2-0)
                                     )
                                     (never)
                                    )
                                    (null)
                                   )
                                  )
                                  (new $status-1
                                   (new $result-5
                                    (seq
                                     (seq
                                      (seq
                                       (par
                                        (seq
                                         (seq
                                          (seq
                                           (call -relay- ("math" "sub") [1 1] sub-1)
                                           (new $successful-1_test
                                            (seq
                                             (seq
                                              (seq
                                               (call -relay- ("math" "add") [sub-1 1] successful-1_incr)
                                               (fold $successful-1 successful-1_fold_var
                                                (seq
                                                 (seq
                                                  (ap successful-1_fold_var $successful-1_test)
                                                  (canon -relay- $successful-1_test  #successful-1_iter_canon)
                                                 )
                                                 (xor
                                                  (match #successful-1_iter_canon.length successful-1_incr
                                                   (null)
                                                  )
                                                  (next successful-1_fold_var)
                                                 )
                                                )
                                                (never)
                                               )
                                              )
                                              (canon -relay- $successful-1_test  #successful-1_result_canon)
                                             )
                                             (ap #successful-1_result_canon successful-1_gate)
                                            )
                                           )
                                          )
                                          (call -relay- ("math" "sub") [1 1] sub-2)
                                         )
                                         (ap "ok" $status-1)
                                        )
                                        (call -relay- ("peer" "timeout") [6000 "timeout"] $status-1)
                                       )
                                       (new $status-1_test
                                        (seq
                                         (seq
                                          (seq
                                           (call -relay- ("math" "add") [0 1] status-1_incr)
                                           (fold $status-1 status-1_fold_var
                                            (seq
                                             (seq
                                              (ap status-1_fold_var $status-1_test)
                                              (canon -relay- $status-1_test  #status-1_iter_canon)
                                             )
                                             (xor
                                              (match #status-1_iter_canon.length status-1_incr
                                               (null)
                                              )
                                              (next status-1_fold_var)
                                             )
                                            )
                                            (never)
                                           )
                                          )
                                          (canon -relay- $status-1_test  #status-1_result_canon)
                                         )
                                         (ap #status-1_result_canon status-1_gate)
                                        )
                                       )
                                      )
                                      (xor
                                       (match status-1_gate.$.[0]! "ok"
                                        (ap true $result-5)
                                       )
                                       (ap false $result-5)
                                      )
                                     )
                                     (new $result-5_test
                                      (seq
                                       (seq
                                        (seq
                                         (call -relay- ("math" "add") [0 1] result-5_incr)
                                         (fold $result-5 result-5_fold_var
                                          (seq
                                           (seq
                                            (ap result-5_fold_var $result-5_test)
                                            (canon -relay- $result-5_test  #result-5_iter_canon)
                                           )
                                           (xor
                                            (match #result-5_iter_canon.length result-5_incr
                                             (null)
                                            )
                                            (next result-5_fold_var)
                                           )
                                          )
                                          (never)
                                         )
                                        )
                                        (canon -relay- $result-5_test  #result-5_result_canon)
                                       )
                                       (ap #result-5_result_canon result-5_gate)
                                      )
                                     )
                                    )
                                   )
                                  )
                                 )
                                 (xor
                                  (match result-5_gate.$.[0]! false
                                   (ap "resource not found: timeout exceeded" $error-2)
                                  )
                                  (seq
                                   (seq
                                    (canon -relay- $resources  #resources_canon)
                                    (call -relay- ("registry" "merge_keys") [#resources_canon] merge_result)
                                   )
                                   (xor
                                    (match merge_result.$.success! true
                                     (ap merge_result.$.key! $result-4)
                                    )
                                    (ap merge_result.$.error! $error-2)
                                   )
                                  )
                                 )
                                )
                                (canon -relay- $result-4  #-result-fix-0-0)
                               )
                               (ap #-result-fix-0-0 -result-flat-0-0)
                              )
                             )
                            )
                           )
                           (xor
                            (match -result-flat-0-0 []
                             (xor
                              (seq
                               (seq
                                (canon -relay- $error-2  #error-2_canon)
                                (fold #error-2_canon e-0-0
                                 (seq
                                  (ap e-0-0 $error-0)
                                  (next e-0-0)
                                 )
                                )
                               )
                               (ap false $success)
                              )
                              (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 12])
                             )
                            )
                            (seq
                             (seq
                              (seq
                               (call -relay- ("peer" "timestamp_sec") [] t-3)
                               (call -relay- ("trust-graph" "get_weight") [-result-flat-0-0.$.[0].owner_peer_id! t-3] weight-0)
                              )
                              (call -relay- ("registry" "republish_key") [-result-flat-0-0.$.[0]! weight-0 t-3] result-6)
                             )
                             (xor
                              (match result-6.$.success! false
                               (seq
                                (ap result-6.$.error! $error-0)
                                (ap false $success)
                               )
                              )
                              (seq
                               (seq
                                (seq
                                 (seq
                                  (null)
                                  (call -relay- ("peer" "timestamp_sec") [] t-4)
                                 )
                                 (call -relay- ("trust-graph" "get_weight") [-result-flat-0.$.[0].issued_by! t-4] weight-1)
                                )
                                (call -relay- ("registry" "put_record") [-result-flat-0.$.[0]! t-1 signature_gate.$.[0].signature.[0]! weight-1 t-4] result-7)
                               )
                               (xor
                                (match result-7.$.success! false
                                 (seq
                                  (ap result-7.$.error! $error-0)
                                  (ap false $success)
                                 )
                                )
                                (seq
                                 (seq
                                  (seq
                                   (seq
                                    (call -relay- ("op" "string_to_b58") [-subnetwork_id-flat-0.$.[0]!] k-1)
                                    (call -relay- ("kad" "neighborhood") [k-1 [] []] nodes-3)
                                   )
                                   (par
                                    (fold nodes-3 n-1-0
                                     (par
                                      (seq
                                       (xor
                                        (xor
                                         (seq
                                          (seq
                                           (seq
                                            (call n-1-0 ("peer" "timestamp_sec") [] t-5)
                                            (call n-1-0 ("trust-graph" "get_weight") [-result-flat-0-0.$.[0].owner_peer_id! t-5] weight-2)
                                           )
                                           (call n-1-0 ("registry" "republish_key") [-result-flat-0-0.$.[0]! weight-2 t-5] result-8)
                                          )
                                          (xor
                                           (match result-8.$.success! false
                                            (ap result-8.$.error! $error-0)
                                           )
                                           (seq
                                            (seq
                                             (seq
                                              (seq
                                               (null)
                                               (call n-1-0 ("peer" "timestamp_sec") [] t-6)
                                              )
                                              (call n-1-0 ("trust-graph" "get_weight") [-result-flat-0.$.[0].issued_by! t-6] weight-3)
                                             )
                                             (call n-1-0 ("registry" "put_record") [-result-flat-0.$.[0]! t-1 signature_gate.$.[0].signature.[0]! weight-3 t-6] result-9)
                                            )
                                            (xor
                                             (match result-9.$.success! true
                                              (ap true $successful-0)
                                             )
                                             (ap result-9.$.error! $error-0)
                                            )
                                           )
                                          )
                                         )
                                         (call n-1-0 ("op" "noop") [])
                                        )
                                        (seq
                                         (call -relay- ("op" "noop") [])
                                         (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 13])
                                        )
                                       )
                                       (call -relay- ("op" "noop") [])
                                      )
                                      (next n-1-0)
                                     )
                                     (never)
                                    )
                                    (null)
                                   )
                                  )
                                  (new $status-2
                                   (new $result-10
                                    (seq
                                     (seq
                                      (seq
                                       (par
                                        (seq
                                         (seq
                                          (seq
                                           (call -relay- ("math" "sub") [1 1] sub-3)
                                           (new $successful-0_test
                                            (seq
                                             (seq
                                              (seq
                                               (call -relay- ("math" "add") [sub-3 1] successful-0_incr)
                                               (fold $successful-0 successful-0_fold_var
                                                (seq
                                                 (seq
                                                  (ap successful-0_fold_var $successful-0_test)
                                                  (canon -relay- $successful-0_test  #successful-0_iter_canon)
                                                 )
                                                 (xor
                                                  (match #successful-0_iter_canon.length successful-0_incr
                                                   (null)
                                                  )
                                                  (next successful-0_fold_var)
                                                 )
                                                )
                                                (never)
                                               )
                                              )
                                              (canon -relay- $successful-0_test  #successful-0_result_canon)
                                             )
                                             (ap #successful-0_result_canon successful-0_gate)
                                            )
                                           )
                                          )
                                          (call -relay- ("math" "sub") [1 1] sub-4)
                                         )
                                         (ap "ok" $status-2)
                                        )
                                        (call -relay- ("peer" "timeout") [6000 "timeout"] $status-2)
                                       )
                                       (new $status-2_test
                                        (seq
                                         (seq
                                          (seq
                                           (call -relay- ("math" "add") [0 1] status-2_incr)
                                           (fold $status-2 status-2_fold_var
                                            (seq
                                             (seq
                                              (ap status-2_fold_var $status-2_test)
                                              (canon -relay- $status-2_test  #status-2_iter_canon)
                                             )
                                             (xor
                                              (match #status-2_iter_canon.length status-2_incr
                                               (null)
                                              )
                                              (next status-2_fold_var)
                                             )
                                            )
                                            (never)
                                           )
                                          )
                                          (canon -relay- $status-2_test  #status-2_result_canon)
                                         )
                                         (ap #status-2_result_canon status-2_gate)
                                        )
                                       )
                                      )
                                      (xor
                                       (match status-2_gate.$.[0]! "ok"
                                        (ap true $result-10)
                                       )
                                       (ap false $result-10)
                                      )
                                     )
                                     (new $result-10_test
                                      (seq
                                       (seq
                                        (seq
                                         (call -relay- ("math" "add") [0 1] result-10_incr)
                                         (fold $result-10 result-10_fold_var
                                          (seq
                                           (seq
                                            (ap result-10_fold_var $result-10_test)
                                            (canon -relay- $result-10_test  #result-10_iter_canon)
                                           )
                                           (xor
                                            (match #result-10_iter_canon.length result-10_incr
                                             (null)
                                            )
                                            (next result-10_fold_var)
                                           )
                                          )
                                          (never)
                                         )
                                        )
                                        (canon -relay- $result-10_test  #result-10_result_canon)
                                       )
                                       (ap #result-10_result_canon result-10_gate)
                                      )
                                     )
                                    )
                                   )
                                  )
                                 )
                                 (ap result-10_gate.$.[0]! $success)
                                )
                               )
                              )
                             )
                            )
                           )
                          )
                         )
                        )
                       )
                      )
                      (new $success_test
                       (seq
                        (seq
                         (seq
                          (call -relay- ("math" "add") [0 1] success_incr)
                          (fold $success success_fold_var
                           (seq
                            (seq
                             (ap success_fold_var $success_test)
                             (canon -relay- $success_test  #success_iter_canon)
                            )
                            (xor
                             (match #success_iter_canon.length success_incr
                              (null)
                             )
                             (next success_fold_var)
                            )
                           )
                           (never)
                          )
                         )
                         (canon -relay- $success_test  #success_result_canon)
                        )
                        (ap #success_result_canon success_gate)
                       )
                      )
                     )
                     (xor
                      (match success_gate.$.[0]! false
                       (ap "worker hasn't registered: timeout exceeded" $error-0)
                      )
                      (call -relay- ("op" "noop") [])
                     )
                    )
                   )
                  )
                 )
                 (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 14])
                )
                (xor
                 (match success_gate.$.[0]! true
                  (xor
                   (seq
                    (seq
                     (seq
                      (new $array-inline-27
                       (seq
                        (seq
                         (ap "worker successfully registered in registry" $array-inline-27)
                         (ap success_gate.$.[0]! $array-inline-27)
                        )
                        (canon %init_peer_id% $array-inline-27  #array-inline-27-0)
                       )
                      )
                      (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-16)
                     )
                     (call %init_peer_id% ("debug" "stringify") [#array-inline-27-0] str-13)
                    )
                    (par
                     (call %init_peer_id% (spell_id-16 "list_push_string") ["logs" str-13])
                     (seq
                      (new $array-inline-28
                       (seq
                        (seq
                         (ap spell_id-16 $array-inline-28)
                         (ap #array-inline-27-0 $array-inline-28)
                        )
                        (canon %init_peer_id% $array-inline-28  #array-inline-28-0)
                       )
                      )
                      (call %init_peer_id% ("run-console" "print") [#array-inline-28-0])
                     )
                    )
                   )
                   (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 15])
                  )
                 )
                 (seq
                  (seq
                   (seq
                    (new $array-inline-29
                     (seq
                      (seq
                       (seq
                        (ap "error registering worker" $array-inline-29)
                        (canon %init_peer_id% $error-0  #push-to-stream-832)
                       )
                       (ap #push-to-stream-832 $array-inline-29)
                      )
                      (canon %init_peer_id% $array-inline-29  #array-inline-29-0)
                     )
                    )
                    (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-17)
                   )
                   (call %init_peer_id% ("debug" "stringify") [#array-inline-29-0] str-14)
                  )
                  (par
                   (call %init_peer_id% (spell_id-17 "list_push_string") ["logs" str-14])
                   (seq
                    (new $array-inline-30
                     (seq
                      (seq
                       (ap spell_id-17 $array-inline-30)
                       (ap #array-inline-29-0 $array-inline-30)
                      )
                      (canon %init_peer_id% $array-inline-30  #array-inline-30-0)
                     )
                    )
                    (call %init_peer_id% ("run-console" "print") [#array-inline-30-0])
                   )
                  )
                 )
                )
               )
               (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 16])
              )
             )
             (seq
              (seq
               (seq
                (new $array-inline-31
                 (seq
                  (seq
                   (seq
                    (ap "error creating subnetwork" $array-inline-31)
                    (canon %init_peer_id% $error  #push-to-stream-850)
                   )
                   (ap #push-to-stream-850 $array-inline-31)
                  )
                  (canon %init_peer_id% $array-inline-31  #array-inline-31-0)
                 )
                )
                (call %init_peer_id% ("getDataSrv" "spell_id") [] spell_id-18)
               )
               (call %init_peer_id% ("debug" "stringify") [#array-inline-31-0] str-15)
              )
              (par
               (call %init_peer_id% (spell_id-18 "list_push_string") ["logs" str-15])
               (seq
                (new $array-inline-32
                 (seq
                  (seq
                   (ap spell_id-18 $array-inline-32)
                   (ap #array-inline-31-0 $array-inline-32)
                  )
                  (canon %init_peer_id% $array-inline-32  #array-inline-32-0)
                 )
                )
                (call %init_peer_id% ("run-console" "print") [#array-inline-32-0])
               )
              )
             )
            )
           )
           (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 17])
          )
         )
         (call %init_peer_id% ("op" "noop") [])
        )
       )
      )
     )
    )
   )
  )
 )
 (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 18])
)`;
