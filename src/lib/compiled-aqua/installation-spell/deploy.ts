/* eslint-disable */
// @ts-nocheck
/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.10.2
 *
 */
import type { IFluenceClient as IFluenceClient$$, CallParams as CallParams$$ } from '@fluencelabs/js-client.api';
import {
    v5_callFunction as callFunction$$,
    v5_registerService as registerService$$,
} from '@fluencelabs/js-client.api';
    


// Services

export interface WorkerDef {
    create: (callParams: CallParams$$<null>) => string | Promise<string>;
    get_peer_id: (callParams: CallParams$$<null>) => string | Promise<string>;
}
export function registerWorker(service: WorkerDef): void;
export function registerWorker(serviceId: string, service: WorkerDef): void;
export function registerWorker(peer: IFluenceClient$$, service: WorkerDef): void;
export function registerWorker(peer: IFluenceClient$$, serviceId: string, service: WorkerDef): void;
       

export function registerWorker(...args: any) {
    registerService$$(
        args,
        {
    "defaultServiceId" : "worker",
    "functions" : {
        "tag" : "labeledProduct",
        "fields" : {
            "create" : {
                "tag" : "arrow",
                "domain" : {
                    "tag" : "nil"
                },
                "codomain" : {
                    "tag" : "unlabeledProduct",
                    "items" : [
                        {
                            "tag" : "scalar",
                            "name" : "string"
                        }
                    ]
                }
            },
            "get_peer_id" : {
                "tag" : "arrow",
                "domain" : {
                    "tag" : "nil"
                },
                "codomain" : {
                    "tag" : "unlabeledProduct",
                    "items" : [
                        {
                            "tag" : "scalar",
                            "name" : "string"
                        }
                    ]
                }
            }
        }
    }
}
    );
}
      
// Functions
export type Deploy_single_workerArgTrigger_config = { blockchain: { end_block: number; start_block: number; }; clock: { end_sec: number; period_sec: number; start_sec: number; }; connections: { connect: boolean; disconnect: boolean; }; } 
export type Deploy_single_workerResult = [string, string]
export function deploy_single_worker(
    air: string,
    trigger_config: Deploy_single_workerArgTrigger_config,
    worker_name: string,
    worker_definition: string,
    config?: {ttl?: number}
): Promise<Deploy_single_workerResult>;

export function deploy_single_worker(
    peer: IFluenceClient$$,
    air: string,
    trigger_config: Deploy_single_workerArgTrigger_config,
    worker_name: string,
    worker_definition: string,
    config?: {ttl?: number}
): Promise<Deploy_single_workerResult>;

export function deploy_single_worker(...args: any) {

    let script = `
                    (xor
                     (seq
                      (seq
                       (seq
                        (seq
                         (seq
                          (seq
                           (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
                           (call %init_peer_id% ("getDataSrv" "air") [] air)
                          )
                          (call %init_peer_id% ("getDataSrv" "trigger_config") [] trigger_config)
                         )
                         (call %init_peer_id% ("getDataSrv" "worker_name") [] worker_name)
                        )
                        (call %init_peer_id% ("getDataSrv" "worker_definition") [] worker_definition)
                       )
                       (new $worker_id
                        (seq
                         (seq
                          (seq
                           (seq
                            (seq
                             (call %init_peer_id% ("json" "obj") ["deal_id" "dummy-deal-id-123" "ipfs" "/dns4/ipfs.fluence.dev/tcp/5001" "worker_def_cid" worker_definition] WorkerSpellArgs_obj)
                             (xor
                              (call %init_peer_id% ("worker" "create") [] $worker_id)
                              (call %init_peer_id% ("worker" "get_peer_id") [] $worker_id)
                             )
                            )
                            (new $worker_id_test
                             (seq
                              (seq
                               (seq
                                (call %init_peer_id% ("math" "add") [0 1] worker_id_incr)
                                (fold $worker_id worker_id_fold_var
                                 (seq
                                  (seq
                                   (ap worker_id_fold_var $worker_id_test)
                                   (canon %init_peer_id% $worker_id_test  #worker_id_iter_canon)
                                  )
                                  (xor
                                   (match #worker_id_iter_canon.length worker_id_incr
                                    (null)
                                   )
                                   (next worker_id_fold_var)
                                  )
                                 )
                                 (never)
                                )
                               )
                               (canon %init_peer_id% $worker_id_test  #worker_id_result_canon)
                              )
                              (ap #worker_id_result_canon worker_id_gate)
                             )
                            )
                           )
                           (call -relay- ("op" "noop") [])
                          )
                          (xor
                           (seq
                            (call worker_id_gate.$.[0]! ("spell" "install") [air WorkerSpellArgs_obj trigger_config] spell_id)
                            (call -relay- ("op" "noop") [])
                           )
                           (seq
                            (call -relay- ("op" "noop") [])
                            (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 1])
                           )
                          )
                         )
                         (new $worker_id_test-0
                          (seq
                           (seq
                            (seq
                             (call %init_peer_id% ("math" "add") [0 1] worker_id_incr-0)
                             (fold $worker_id worker_id_fold_var-0
                              (seq
                               (seq
                                (ap worker_id_fold_var-0 $worker_id_test-0)
                                (canon %init_peer_id% $worker_id_test-0  #worker_id_iter_canon-0)
                               )
                               (xor
                                (match #worker_id_iter_canon-0.length worker_id_incr-0
                                 (null)
                                )
                                (next worker_id_fold_var-0)
                               )
                              )
                              (never)
                             )
                            )
                            (canon %init_peer_id% $worker_id_test-0  #worker_id_result_canon-0)
                           )
                           (ap #worker_id_result_canon-0 worker_id_gate-0)
                          )
                         )
                        )
                       )
                      )
                      (xor
                       (call %init_peer_id% ("callbackSrv" "response") [spell_id worker_id_gate-0.$.[0]!])
                       (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 2])
                      )
                     )
                     (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 3])
                    )
    `
    return callFunction$$(
        args,
        {
    "functionName" : "deploy_single_worker",
    "arrow" : {
        "tag" : "arrow",
        "domain" : {
            "tag" : "labeledProduct",
            "fields" : {
                "air" : {
                    "tag" : "scalar",
                    "name" : "string"
                },
                "trigger_config" : {
                    "tag" : "struct",
                    "name" : "TriggerConfig",
                    "fields" : {
                        "blockchain" : {
                            "tag" : "struct",
                            "name" : "BlockChainConfig",
                            "fields" : {
                                "end_block" : {
                                    "tag" : "scalar",
                                    "name" : "u32"
                                },
                                "start_block" : {
                                    "tag" : "scalar",
                                    "name" : "u32"
                                }
                            }
                        },
                        "clock" : {
                            "tag" : "struct",
                            "name" : "ClockConfig",
                            "fields" : {
                                "end_sec" : {
                                    "tag" : "scalar",
                                    "name" : "u32"
                                },
                                "period_sec" : {
                                    "tag" : "scalar",
                                    "name" : "u32"
                                },
                                "start_sec" : {
                                    "tag" : "scalar",
                                    "name" : "u32"
                                }
                            }
                        },
                        "connections" : {
                            "tag" : "struct",
                            "name" : "ConnectionPoolConfig",
                            "fields" : {
                                "connect" : {
                                    "tag" : "scalar",
                                    "name" : "bool"
                                },
                                "disconnect" : {
                                    "tag" : "scalar",
                                    "name" : "bool"
                                }
                            }
                        }
                    }
                },
                "worker_name" : {
                    "tag" : "scalar",
                    "name" : "string"
                },
                "worker_definition" : {
                    "tag" : "scalar",
                    "name" : "string"
                }
            }
        },
        "codomain" : {
            "tag" : "unlabeledProduct",
            "items" : [
                {
                    "tag" : "scalar",
                    "name" : "string"
                },
                {
                    "tag" : "scalar",
                    "name" : "string"
                }
            ]
        }
    },
    "names" : {
        "relay" : "-relay-",
        "getDataSrv" : "getDataSrv",
        "callbackSrv" : "callbackSrv",
        "responseSrv" : "callbackSrv",
        "responseFnName" : "response",
        "errorHandlingSrv" : "errorHandlingSrv",
        "errorFnName" : "error"
    }
},
        script
    )
}

export type DeployArgConfig = { installation_script: string; installation_trigger: { blockchain: { end_block: number; start_block: number; }; clock: { end_sec: number; period_sec: number; start_sec: number; }; connections: { connect: boolean; disconnect: boolean; }; }; workers: { definition: string; hosts: string[]; name: string; }[]; } 
export type DeployResult = { workers: { definition: string; installation_spells: { host_id: string; spell_id: string; worker_id: string; }[]; name: string; }[]; }
export function deploy(
    config_: DeployArgConfig,
    config?: {ttl?: number}
): Promise<DeployResult>;

export function deploy(
    peer: IFluenceClient$$,
    config_: DeployArgConfig,
    config?: {ttl?: number}
): Promise<DeployResult>;

export function deploy(...args: any) {

    let script = `
                    (xor
                     (seq
                      (seq
                       (seq
                        (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
                        (call %init_peer_id% ("getDataSrv" "config") [] config)
                       )
                       (new $workers
                        (seq
                         (seq
                          (fold config.$.workers! w-0
                           (seq
                            (new $spells
                             (seq
                              (seq
                               (seq
                                (seq
                                 (fold w-0.$.hosts! h-0
                                  (seq
                                   (seq
                                    (call -relay- ("op" "noop") [])
                                    (xor
                                     (seq
                                      (seq
                                       (seq
                                        (seq
                                         (seq
                                          (null)
                                          (new $worker_id
                                           (seq
                                            (seq
                                             (seq
                                              (seq
                                               (call h-0 ("json" "obj") ["deal_id" "dummy-deal-id-123" "ipfs" "/dns4/ipfs.fluence.dev/tcp/5001" "worker_def_cid" w-0.$.definition!] WorkerSpellArgs_obj)
                                               (xor
                                                (call h-0 ("worker" "create") [] $worker_id)
                                                (call h-0 ("worker" "get_peer_id") [] $worker_id)
                                               )
                                              )
                                              (new $worker_id_test
                                               (seq
                                                (seq
                                                 (seq
                                                  (call h-0 ("math" "add") [0 1] worker_id_incr)
                                                  (fold $worker_id worker_id_fold_var
                                                   (seq
                                                    (seq
                                                     (ap worker_id_fold_var $worker_id_test)
                                                     (canon h-0 $worker_id_test  #worker_id_iter_canon)
                                                    )
                                                    (xor
                                                     (match #worker_id_iter_canon.length worker_id_incr
                                                      (null)
                                                     )
                                                     (next worker_id_fold_var)
                                                    )
                                                   )
                                                   (never)
                                                  )
                                                 )
                                                 (canon h-0 $worker_id_test  #worker_id_result_canon)
                                                )
                                                (ap #worker_id_result_canon worker_id_gate)
                                               )
                                              )
                                             )
                                             (xor
                                              (call worker_id_gate.$.[0]! ("spell" "install") [config.$.installation_script! WorkerSpellArgs_obj config.$.installation_trigger!] spell_id)
                                              (seq
                                               (seq
                                                (call -relay- ("op" "noop") [])
                                                (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 1])
                                               )
                                               (call -relay- ("op" "noop") [])
                                              )
                                             )
                                            )
                                            (new $worker_id_test-0
                                             (seq
                                              (seq
                                               (seq
                                                (call h-0 ("math" "add") [0 1] worker_id_incr-0)
                                                (fold $worker_id worker_id_fold_var-0
                                                 (seq
                                                  (seq
                                                   (ap worker_id_fold_var-0 $worker_id_test-0)
                                                   (canon h-0 $worker_id_test-0  #worker_id_iter_canon-0)
                                                  )
                                                  (xor
                                                   (match #worker_id_iter_canon-0.length worker_id_incr-0
                                                    (null)
                                                   )
                                                   (next worker_id_fold_var-0)
                                                  )
                                                 )
                                                 (never)
                                                )
                                               )
                                               (canon h-0 $worker_id_test-0  #worker_id_result_canon-0)
                                              )
                                              (ap #worker_id_result_canon-0 worker_id_gate-0)
                                             )
                                            )
                                           )
                                          )
                                         )
                                         (call h-0 ("json" "obj") ["host_id" h-0 "spell_id" spell_id "worker_id" worker_id_gate-0.$.[0]!] DeployedSpell_obj)
                                        )
                                        (ap DeployedSpell_obj $spells)
                                       )
                                       (call -relay- ("op" "noop") [])
                                      )
                                      (xor
                                       (par
                                        (seq
                                         (new $array-inline
                                          (seq
                                           (seq
                                            (seq
                                             (seq
                                              (seq
                                               (ap "deployed spell" $array-inline)
                                               (ap spell_id $array-inline)
                                              )
                                              (ap worker_id_gate-0.$.[0]! $array-inline)
                                             )
                                             (ap "to" $array-inline)
                                            )
                                            (ap h-0 $array-inline)
                                           )
                                           (canon %init_peer_id% $array-inline  #array-inline-0)
                                          )
                                         )
                                         (call %init_peer_id% ("run-console" "print") [#array-inline-0])
                                        )
                                        (null)
                                       )
                                       (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 2])
                                      )
                                     )
                                     (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 3])
                                    )
                                   )
                                   (next h-0)
                                  )
                                 )
                                 (canon %init_peer_id% $spells  #spells_canon)
                                )
                                (call %init_peer_id% ("json" "obj") ["definition" w-0.$.definition! "installation_spells" #spells_canon "name" w-0.$.name!] DeployedWorkers_obj)
                               )
                               (ap DeployedWorkers_obj $workers)
                              )
                              (xor
                               (par
                                (seq
                                 (new $array-inline-1
                                  (seq
                                   (seq
                                    (seq
                                     (ap "deployed workers" $array-inline-1)
                                     (canon %init_peer_id% $workers  #push-to-stream-96)
                                    )
                                    (ap #push-to-stream-96 $array-inline-1)
                                   )
                                   (canon %init_peer_id% $array-inline-1  #array-inline-1-0)
                                  )
                                 )
                                 (call %init_peer_id% ("run-console" "print") [#array-inline-1-0])
                                )
                                (null)
                               )
                               (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 4])
                              )
                             )
                            )
                            (next w-0)
                           )
                          )
                          (canon %init_peer_id% $workers  #workers_canon)
                         )
                         (call %init_peer_id% ("json" "obj") ["workers" #workers_canon] DeployedAppWorkers_obj)
                        )
                       )
                      )
                      (xor
                       (call %init_peer_id% ("callbackSrv" "response") [DeployedAppWorkers_obj])
                       (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 5])
                      )
                     )
                     (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 6])
                    )
    `
    return callFunction$$(
        args,
        {
    "functionName" : "deploy",
    "arrow" : {
        "tag" : "arrow",
        "domain" : {
            "tag" : "labeledProduct",
            "fields" : {
                "config" : {
                    "tag" : "struct",
                    "name" : "AppDeployDefinition",
                    "fields" : {
                        "installation_script" : {
                            "tag" : "scalar",
                            "name" : "string"
                        },
                        "installation_trigger" : {
                            "tag" : "struct",
                            "name" : "TriggerConfig",
                            "fields" : {
                                "blockchain" : {
                                    "tag" : "struct",
                                    "name" : "BlockChainConfig",
                                    "fields" : {
                                        "end_block" : {
                                            "tag" : "scalar",
                                            "name" : "u32"
                                        },
                                        "start_block" : {
                                            "tag" : "scalar",
                                            "name" : "u32"
                                        }
                                    }
                                },
                                "clock" : {
                                    "tag" : "struct",
                                    "name" : "ClockConfig",
                                    "fields" : {
                                        "end_sec" : {
                                            "tag" : "scalar",
                                            "name" : "u32"
                                        },
                                        "period_sec" : {
                                            "tag" : "scalar",
                                            "name" : "u32"
                                        },
                                        "start_sec" : {
                                            "tag" : "scalar",
                                            "name" : "u32"
                                        }
                                    }
                                },
                                "connections" : {
                                    "tag" : "struct",
                                    "name" : "ConnectionPoolConfig",
                                    "fields" : {
                                        "connect" : {
                                            "tag" : "scalar",
                                            "name" : "bool"
                                        },
                                        "disconnect" : {
                                            "tag" : "scalar",
                                            "name" : "bool"
                                        }
                                    }
                                }
                            }
                        },
                        "workers" : {
                            "tag" : "array",
                            "type" : {
                                "tag" : "struct",
                                "name" : "WorkerDeployDefinition",
                                "fields" : {
                                    "definition" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    },
                                    "hosts" : {
                                        "tag" : "array",
                                        "type" : {
                                            "tag" : "scalar",
                                            "name" : "string"
                                        }
                                    },
                                    "name" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "codomain" : {
            "tag" : "unlabeledProduct",
            "items" : [
                {
                    "tag" : "struct",
                    "name" : "DeployedAppWorkers",
                    "fields" : {
                        "workers" : {
                            "tag" : "array",
                            "type" : {
                                "tag" : "struct",
                                "name" : "DeployedWorkers",
                                "fields" : {
                                    "definition" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    },
                                    "installation_spells" : {
                                        "tag" : "array",
                                        "type" : {
                                            "tag" : "struct",
                                            "name" : "DeployedSpell",
                                            "fields" : {
                                                "host_id" : {
                                                    "tag" : "scalar",
                                                    "name" : "string"
                                                },
                                                "spell_id" : {
                                                    "tag" : "scalar",
                                                    "name" : "string"
                                                },
                                                "worker_id" : {
                                                    "tag" : "scalar",
                                                    "name" : "string"
                                                }
                                            }
                                        }
                                    },
                                    "name" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    }
                                }
                            }
                        }
                    }
                }
            ]
        }
    },
    "names" : {
        "relay" : "-relay-",
        "getDataSrv" : "getDataSrv",
        "callbackSrv" : "callbackSrv",
        "responseSrv" : "callbackSrv",
        "responseFnName" : "response",
        "errorHandlingSrv" : "errorHandlingSrv",
        "errorFnName" : "error"
    }
},
        script
    )
}

/* eslint-enable */